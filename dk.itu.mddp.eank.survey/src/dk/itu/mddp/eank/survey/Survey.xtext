// automatically generated by Xtext
grammar dk.itu.mddp.eank.survey.Survey with org.eclipse.xtext.common.Terminals

import "platform:/resource/dk.itu.mddp.eank.project/model/SurveyModel.ecore" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model returns Model:
	{Model}
		(surveys+=Survey)?;


Question returns Question:
	MultipleChoice | Open | Rating_Impl | Ranking | Dichotomous | SumConstant | Staple;
Survey returns Survey:
	{Survey}
	'Name' ':'
		(questions+=Question (',' questions+=Question)*)?;

EString returns ecore::EString:
	STRING | ID;

EBoolean returns ecore::EBoolean:
	'true' | 'false';


MultipleChoice returns MultipleChoice:
	{MultipleChoice}
	'MultipleChoice' ':' 
		('is required')? 
		('ask'? question=EString)? 
		('you'? 'can'? 'choose' 'from'? 'these'? choice+=Choice ( "," choice+=Choice)* )?
		('or' 'free'?'form'?'choice'? other=EString)?
		('conditionals' ':' MultipleChoiceForks+=MultipleChoiceFork ( "," MultipleChoiceForks+=MultipleChoiceFork)*)?;

Open returns Open:
	{Open}
	
	'Open' ':'
		('is required')? 
		(question=EString)? 
		('AnswerLength' AnswerLength=EString)?
	;

Rating_Impl returns Rating:
	{Rating}
	(required?='required')?
	'Rating'
	'{'
		('question' question=EString)?
		('Min' Min=EInt)?
		('Max' Max=EInt)?
		('first' first=EString)?
		('last' last=EString)?
		('RatingForks' '{' RatingForks+=RatingFork ( "," RatingForks+=RatingFork)* '}' )?
	'}';

Ranking returns Ranking:
	(required?='required')?
	'Ranking'
	'{'
		('question' question=EString)?
		('forks' '{' forks+=RankingFork ( "," forks+=RankingFork)* '}' )?
		'choices' '{' choices+=Choice ( "," choices+=Choice)* '}' 
	'}';

Dichotomous returns Dichotomous:
	{Dichotomous}
	(required?='required')?
	'Dichotomous'
	'{'
		('question' question=EString)?
		('yes' '{' yes+=Question ( "," yes+=Question)* '}' )?
		('no' '{' no+=Question ( "," no+=Question)* '}' )?
	'}';

SumConstant returns SumConstant:
	{SumConstant}
	(required?='required')?
	'SumConstant'
	'{'
		('question' question=EString)?
	'}';

Staple returns Staple:
	{Staple}
	(required?='required')?
	'Staple'
	'{'
		('question' question=EString)?
		('Min' Min=EInt)?
		('Max' Max=EInt)?
		('first' first=EString)?
		('last' last=EString)?
		('mid' mid=EString)?
		('RatingForks' '{' RatingForks+=RatingFork ( "," RatingForks+=RatingFork)* '}' )?
	'}';

Choice returns Choice:

	Description=EString;

MultipleChoiceFork returns MultipleChoiceFork:
	'condition'
		'matcher' matcher=[Choice|EString]
		('questions' ':' forkedquestions+=Question ( "," forkedquestions+=Question)* )?;

EInt returns ecore::EInt:
	'-'? INT;

RatingFork returns RatingFork:
	{RatingFork}
	'RatingFork'
	'{'
		('min' min=EInt)?
		('max' max=EInt)?
		('conditionals' '{' forkedquestion+=Question ( "," forkedquestion+=Question)* '}' )?
	'}';

RankingFork returns RankingFork:
	'RankingFork'
	'{'
		('min' min=EInt)?
		('max' max=EInt)?
		'matcher' matcher=[Choice|EString]
		('forkedquestions' '{' forkedquestions+=Question ( "," forkedquestions+=Question)* '}' )?
	'}';
